{"version":3,"sources":["components/SearchBox/SearchBox.module.css","components/ShowCards/SingleShowCard/SingleShowCard.module.css","components/Actors/ActorCard/ActorCard.module.css","containers/Genres/Genres.module.css","containers/LandingPage/LandingPage.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Error/Error.module.css","containers/SingleShow/SingleShow.module.css","components/UI/Button/Button.module.css","components/UI/Footer/Footer.js","components/UI/Header/Header.js","components/ShowCards/ShowCard.js","services/HttpServices.js","models/Show.js","components/SearchBox/SearchBox.js","components/UI/Spinner/Spinner.js","components/UI/Error/Error.js","containers/LandingPage/LandingPage.js","components/UI/Button/Button.js","components/ShowCards/SingleShowCard/SingleShowCard.js","models/Actor.js","components/Actors/ActorCard/ActorCard.js","components/Actors/Actors.js","containers/SingleShow/SingleShow.js","containers/Genres/Genres.js","components/AboutPage/About.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Date","getFullYear","Header","to","ShowCard","props","showInfo","id","src","image","alt","rating","name","http","axios","create","baseURL","Show","summary","genres","getName","toLowerCase","this","medium","average","description","SearchBox","classes","wrap","search","onChange","type","searchTerm","placeholder","React","Component","Spinner","loader","Error","LandingPage","searchHnadler","event","value","target","setState","state","shows","error","get","then","res","data","sort","a","b","length","map","show","catch","err","displayShow","filterShow","filter","includes","join","key","Button","onClick","click","children","withRouter","Img","Description","genre","history","push","pathname","encodeURIComponent","filterGenres","style","textAlign","dangerouslySetInnerHTML","__html","hr","Actor","cast","person","ActorCard","actor","ActorName","Actors","actorsInfo","SingleShow","actors","match","params","_embedded","seasons","Genres","URLSearchParams","location","allShows","Heading","About","width","margin","Main","exact","path","component","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.45f6f336.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBox_search__3A_hF\",\"searchTerm\":\"SearchBox_searchTerm__1TAxQ\",\"wrap\":\"SearchBox_wrap__z_IQF\",\"fontAwesome\":\"SearchBox_fontAwesome__TC3d2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Description\":\"SingleShowCard_Description__39ecQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActorCard\":\"ActorCard_ActorCard__uumUh\",\"ActorName\":\"ActorCard_ActorName__1Mpdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Genres\":\"Genres_Genres__1B5bi\",\"Heading\":\"Genres_Heading__2JzfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LandingPage\":\"LandingPage_LandingPage__3IAUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3iG4j\",\"load3\":\"Spinner_load3__jCrlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__2J6bF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleShow\":\"SingleShow_SingleShow__2vsu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1W_s7\"};","\r\nimport React from 'react'\r\n\r\nconst Footer = () => (\r\n    <footer className=\"page-footer blue darken-2\">\r\n        <div className=\"footer-copyright\">\r\n            <div className=\"container\">Â© {new Date().getFullYear()} Copyright BIT</div>\r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default Footer","\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <nav className=\"blue darken-2\">\r\n            <div className=\"container\">\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to=\"/\" className=\"brand-logo card-title\">\r\n                        BitShow\r\n                    </Link>\r\n                    <ul className=\"right\">\r\n                        <li>\r\n                            <Link to=\"/about\"><span>About</span></Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ShowCard = (props) => (\r\n\r\n  <Link to = {`/show/${props.showInfo.id}`}>\r\n    <div className=\"col s12 m4\">\r\n        <div className=\"card hoverable\">\r\n            <div className=\"card-image\">\r\n                <img src={props.showInfo.image} alt=\"\" />\r\n                <span className=\"btn-floating btn-large halfway-fab blue \">{props.showInfo.rating}</span>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title grey-text text-darken-4 truncate\">{props.showInfo.name}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</Link>\r\n)\r\n\r\nexport default ShowCard","import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n    baseURL: 'https://api.tvmaze.com/shows'\r\n \r\n  });\r\n\r\nexport default http","\r\nexport default class Show {\r\n    constructor({ id, name, image, rating, summary, genres }) {\r\n        this.id = id\r\n        this.name = name\r\n        this.genres = genres\r\n        this.image = image.medium\r\n        this.rating = rating.average \r\n        this.description = summary\r\n     \r\n    }\r\n\r\n    getName = () => {\r\n        return this.name.toLowerCase()\r\n    }\r\n}","import React from 'react'\r\nimport classes from './SearchBox.module.css'\r\n\r\n\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.wrap}>\r\n            <div className={classes.search}>\r\n               <input onChange = {this.props.onChange} type=\"text\" className={classes.searchTerm} placeholder='Search for shows' />\r\n            </div>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\n\r\nconst Spinner = () => {\r\n    return <div className = {classes.loader}>Loading...</div>\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\nimport classes from './Error.module.css';\r\n\r\nconst Error = () => {\r\n    return <p className = {classes.Error}>Something is wrong :( Please try again later!</p>\r\n}\r\n\r\nexport default Error;","import React from 'react'\r\nimport ShowCard from '../../components/ShowCards/ShowCard'\r\nimport classes from './LandingPage.module.css'\r\nimport http from '../../services/HttpServices'\r\nimport Show from '../../models/Show'\r\nimport SearchBox from '../../components/SearchBox/SearchBox'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport Error from '../../components/UI/Error/Error'\r\n\r\n\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shows: [],\r\n            search: '',\r\n            error: false\r\n        }\r\n    }\r\n\r\n    searchHnadler = (event) => {\r\n        const value = event.target.value.toLowerCase() \r\n        this.setState({ search: value })\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n            http.get().then(res => {\r\n  \r\n            res.data.sort((a, b) => b.rating.average - a.rating.average).length = 51\r\n            this.setState({ shows: res.data.map(show => new Show(show)) })\r\n        })\r\n        .catch(err => this.setState({error: true}))\r\n\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {shows, error, search} = this.state\r\n        if (this.state.shows === []) {\r\n            return <Spinner />\r\n        }\r\n\r\n        let displayShow = shows\r\n        let filterShow = displayShow.filter(show => {\r\n            if (show.getName().includes(search)) {\r\n                return true\r\n            }\r\n        });\r\n\r\n        if (search) {\r\n            displayShow = filterShow\r\n        }\r\n        if (error) {\r\n            return <Error />\r\n        }\r\n\r\n        return (\r\n            <div className={[classes.LandingPage, 'container'].join(' ')}>\r\n          \r\n            <SearchBox onChange={this.searchHnadler} />\r\n            <div className='row'>\r\n            {displayShow.map(show => <ShowCard key={show.id} showInfo={show} />)}\r\n            </div>\r\n        </div>\r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <a onClick = {props.click} className={[classes.Button, \"waves-effect waves-light btn-small\"].join(' ')}>{props.children}</a>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './SingleShowCard.module.css';\r\nimport Button from '../../UI/Button/Button'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst SingleShowCard = (props) => {\r\n\r\n    const { description, genres } = props.show\r\n\r\n\r\n\r\n\r\n\r\n    function innerHtml() {\r\n        return { __html: description }\r\n    }\r\n\r\n    function filterGenres(genre) {\r\n\r\n   \r\n        props.history.push({\r\n            pathname: '/genres',\r\n            search: `?genre=${encodeURIComponent(genre)}`,\r\n          \r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='row' >\r\n                <div className=\"col s12 m6 l6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <img className={classes.Img} src={props.show.image} alt='' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={[classes.Description, 'col s12 m6 l6'].join(' ')} >\r\n                    <h4>{props.show.name}</h4>\r\n                    {genres ? genres.map(genre => <Button click={() => filterGenres(genre)} key={genre}>{genre}</Button>) : null}\r\n                    <p style={{ textAlign: 'justify' }} dangerouslySetInnerHTML={innerHtml()} />\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(SingleShowCard);","export default class Actor {\r\n    constructor(cast) {\r\n        this.id = cast.person.id;\r\n        this.name = cast.person.name;\r\n        this.image = cast.person.image.medium\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport classes from './ActorCard.module.css'\r\n\r\n\r\n\r\nconst ActorCard = (props) => {\r\n\r\n    return <div className=\"col s6 m3 xl2\">\r\n            <div className= {[classes.ActorCard, 'card'].join(' ')}>\r\n                <div className=\"card-image\">\r\n                    <img src={props.actor.image} alt=\"\" />\r\n                    <span className= {[classes.ActorName, 'card-title'].join(' ')}>{props.actor.name}</span>\r\n                </div>\r\n            </div>\r\n   \r\n    </div>\r\n}\r\n\r\nexport default ActorCard","import React from 'react'\r\nimport ActorCard from './ActorCard/ActorCard'\r\n\r\nconst Actors = (props) => {\r\n    return (\r\n       <div>\r\n           <h4 style = {{textAlign: \"center\"}}>Cast</h4>\r\n           {props.actorsInfo.map(actor => <ActorCard key={actor.id} actor={actor} />)}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Actors","import React from 'react'\r\nimport http from '../../services/HttpServices'\r\nimport Show from '../../models/Show'\r\nimport classes from './SingleShow.module.css'\r\nimport SingleShowCard from '../../components/ShowCards/SingleShowCard/SingleShowCard'\r\nimport Actor from '../../models/Actor'\r\nimport Actors from '../../components/Actors/Actors'\r\n\r\n\r\n\r\nclass SingleShow extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show: {},\r\n            actors: []\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        http.get(`http://api.tvmaze.com/shows/${id}?embed[]=cast&embed[]=seasons`)\r\n            .then(show => {\r\n                const actors = show.data._embedded.cast\r\n               actors.length = 6\r\n                const seasons = show.data._embedded.seasons\r\n                this.setState({ show: new Show(show.data), actors: actors.map(actor => new Actor(actor)) }\r\n                )\r\n            }\r\n            )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.show === false) {\r\n            return <p>fff</p>\r\n        }\r\n\r\n        return <div className={classes.SingleShow}>\r\n            <SingleShowCard key={this.state.show.id} show={this.state.show} />\r\n            <div className='row'>\r\n                <Actors actorsInfo = {this.state.actors} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default SingleShow;","import React from 'react'\r\nimport http from '../../services/HttpServices'\r\nimport Show from '../../models/Show'\r\nimport ShowCard from '../../components/ShowCards/ShowCard'\r\nimport classes from './Genres.module.css'\r\n\r\n\r\nclass Genres extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shows: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const genre = new URLSearchParams(this.props.location.search).get('genre')\r\n        http.get().then(res => {\r\n\r\n            const filter = res.data.filter(show => {\r\n                if (show.genres.includes(genre)) {\r\n                    return true\r\n                }\r\n            })\r\n            this.setState({ shows: filter.map(show => new Show(show)) })\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const genre = new URLSearchParams(this.props.location.search).get('genre')\r\n        if (this.state.allShows === false) {\r\n            return <p>Loading</p>\r\n        }\r\n\r\n\r\n\r\n\r\n        return <div className={classes.Genres}>\r\n            <div className='row'>\r\n                <h2 className={classes.Heading}>{genre}</h2>\r\n                {this.state.shows.map(show => <ShowCard key={show.id} showInfo={show} />)}\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\nexport default Genres","import React from 'react'\r\n\r\n\r\nconst About = (props) => {\r\n    return <>\r\n        <section style = {{width: '70%', margin: 'auto'}}>\r\n            <h1 style={{ textAlign: 'center', }}>\r\n                About\r\n            </h1>\r\n            <p style={{ textAlign: 'center' }}>Lorem Ipsum ÑÐµ ÑÐµÐ´Ð½Ð¾ÑÑÐ°Ð²Ð½Ð¾ Ð¼Ð¾Ð´ÐµÐ» ÑÐµÐºÑÑÐ° ÐºÐ¾ÑÐ¸ ÑÐµ ÐºÐ¾ÑÐ¸ÑÑÐ¸ Ñ ÑÑÐ°Ð¼Ð¿Ð°ÑÑÐºÐ¾Ñ Ð¸ ÑÐ»Ð¾Ð²Ð¾ÑÐ»Ð°Ð³Ð°ÑÐºÐ¾Ñ Ð¸Ð½Ð´ÑÑÑÑÐ¸ÑÐ¸. Lorem ipsum ÑÐµ Ð±Ð¸Ð¾ ÑÑÐ°Ð½Ð´Ð°ÑÐ´ Ð·Ð° Ð¼Ð¾Ð´ÐµÐ» ÑÐµÐºÑÑÐ° ÑÐ¾Ñ Ð¾Ð´ 1500. Ð³Ð¾Ð´Ð¸Ð½Ðµ, ÐºÐ°Ð´Ð° ÑÐµ Ð½ÐµÐ¿Ð¾Ð·Ð½Ð°ÑÐ¸ ÑÑÐ°Ð¼Ð¿Ð°Ñ ÑÐ·ÐµÐ¾ ÐºÑÑÐ¸ÑÑ ÑÐ° ÑÐ»Ð¾Ð²Ð¸Ð¼Ð° Ð¸ ÑÐ»Ð¾Ð¶Ð¸Ð¾ Ð¸Ñ ÐºÐ°ÐºÐ¾ Ð±Ð¸ Ð½Ð°Ð¿ÑÐ°Ð²Ð¸Ð¾ ÑÐ·Ð¾ÑÐ°Ðº ÐºÑÐ¸Ð³Ðµ.\r\n            ÐÐµ ÑÐ°Ð¼Ð¾ ÑÑÐ¾ ÑÐµ Ð¾Ð²Ð°Ñ Ð¼Ð¾Ð´ÐµÐ» Ð¾Ð¿ÑÑÐ°Ð¾ Ð¿ÐµÑ Ð²ÐµÐºÐ¾Ð²Ð°,\r\n            Ð½ÐµÐ³Ð¾ ÑÐµ ÑÐ°Ðº Ð¿Ð¾ÑÐµÐ¾ Ð´Ð° ÑÐµ ÐºÐ¾ÑÐ¸ÑÑÐ¸ Ð¸ Ñ ÐµÐ»ÐµÐºÑÑÐ¾Ð½ÑÐºÐ¸Ð¼ Ð¼ÐµÐ´Ð¸ÑÐ¸Ð¼Ð°, Ð½ÐµÐ¿ÑÐ¾Ð¼ÐµÐ½Ð¸Ð²ÑÐ¸ ÑÐµ.\r\n            ÐÐ¾Ð¿ÑÐ»Ð°ÑÐ¸Ð·Ð¾Ð²Ð°Ð½ ÑÐµ ÑÐµÐ·Ð´ÐµÑÐµÑÐ¸Ñ Ð³Ð¾Ð´Ð¸Ð½Ð° Ð´Ð²Ð°Ð´ÐµÑÐµÑÐ¾Ð³ Ð²ÐµÐºÐ° Ð·Ð°ÑÐµÐ´Ð½Ð¾ ÑÐ° Ð»Ð¸ÑÑÐ¾Ð²Ð¸Ð¼Ð° Ð»ÐµÑÐµÑÑÐµÑÐ° ÐºÐ¾ÑÐ¸ ÑÑ\r\n            ÑÐ°Ð´ÑÐ¶Ð°Ð»Ð¸ Lorem Ipsum Ð¿Ð°ÑÑÑÐµ, Ð° Ð´Ð°Ð½Ð°Ñ ÑÐ° ÑÐ¾ÑÑÐ²ÐµÑÑÐºÐ¸Ð¼ Ð¿Ð°ÐºÐµÑÐ¾Ð¼ Ð·Ð° Ð¿ÑÐµÐ»Ð¾Ð¼ ÐºÐ°Ð¾ ÑÑÐ¾ ÑÐµ Aldus PageMaker\r\n             ÐºÐ¾ÑÐ¸ ÑÐµ ÑÐ°Ð´ÑÐ¶Ð°Ð¾ Lorem Ipsum Ð²ÐµÑÐ·Ð¸ÑÐµ.</p>\r\n        </section>\r\n\r\n\r\n    </>\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport LandingPage from './containers/LandingPage/LandingPage'\r\nimport SingleShow from './containers/SingleShow/SingleShow'\r\nimport Genres from './containers/Genres/Genres'\r\nimport About from './components/AboutPage/About'\r\n\r\n\r\n\r\nconst Main = () => {\r\n    return <main>\r\n        <Switch >\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route path='/show/:id' component={SingleShow} />\r\n            <Route path='/genres' component = {Genres} />\r\n            <Route path='/about' component = {About} />\r\n            <Redirect to ='/' />\r\n        </Switch>\r\n\r\n    </main>\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport Footer from './components/UI/Footer/Footer';\r\nimport Header from './components/UI/Header/Header'\r\nimport Main from './Main'\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <>\r\n    \r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n\r\n    </>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <HashRouter >\r\n        <App />\r\n  </HashRouter>\r\n\r\n  \r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}